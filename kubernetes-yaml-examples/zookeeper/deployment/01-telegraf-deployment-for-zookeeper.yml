apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-zookeeper-config
  namespace: kafka
  labels:
    k8s-app: telegraf-zookeeper
data:
  telegraf.conf: |+
    [global_tags]
      env = "$ENV"
    [agent]
      hostname = "$POD_NAME"
    [[outputs.http]]
      url = "https://$SPLUNK_HEC_URL/services/collector"
      insecure_skip_verify = true
      data_format = "splunkmetric"
      splunkmetric_hec_routing = true
      [outputs.http.headers]
        Content-Type = "application/json"
        Authorization = "Splunk $SPLUNK_HEC_TOKEN"
        X-Splunk-Request-Channel = "$SPLUNK_HEC_TOKEN"

    # zookeeper metrics
    [[inputs.zookeeper]]
      servers = ["zookeeper-0-svc:2181", "zookeeper-1-svc:2181", "zookeeper-2-svc:2181"]

---
# Section: Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf-zookeeper
  namespace: kafka
  labels:
    k8s-app: telegraf-zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      name: telegraf-zookeeper
  template:
    metadata:
      labels:
        name: telegraf-zookeeper
    spec:
      containers:
      - name: telegraf
        image: docker.io/telegraf:latest
        resources:
          requests:
            cpu: 10m
            memory: 60Mi
          limits:
            memory: 120Mi
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SPLUNK_HEC_URL
          valueFrom:
            secretKeyRef:
              name: splunk-secrets
              key: splunk_hec_url
        - name: SPLUNK_HEC_TOKEN
          valueFrom:
            secretKeyRef:
              name: splunk-secrets
              key: splunk_hec_token
        volumeMounts:
        - name: telegraf-zookeeper-config
          mountPath: /etc/telegraf
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        configMap:
          name: telegraf-zookeeper-config
